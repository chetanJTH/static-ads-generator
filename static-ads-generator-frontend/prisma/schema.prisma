// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// NextAuth.js Models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id         String     @id @default(cuid())
  name       String
  brandKitId String?
  creatives  Creative[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Creative {
  id         String    @id @default(cuid())
  projectId  String
  templateId String?
  recipeJson String
  thumbUrl   String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  versions   Version[]
  shares     Share[]
  
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Version {
  id              String   @id @default(cuid())
  creativeId      String
  recipeJson      String
  exportSquareUrl String?
  exportStoryUrl  String?
  exportLinkUrl   String?
  createdAt       DateTime @default(now())
  
  creative Creative @relation(fields: [creativeId], references: [id], onDelete: Cascade)
}

model Share {
  id         String    @id @default(cuid())
  creativeId String
  slug       String    @unique
  expiresAt  DateTime?
  createdAt  DateTime  @default(now())
  
  creative Creative @relation(fields: [creativeId], references: [id], onDelete: Cascade)
}
