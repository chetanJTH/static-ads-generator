name: 🧪 CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'

    - name: 📦 Install dependencies
      working-directory: ./apps/frontend
      run: npm ci

    - name: 🧪 Run linting
      working-directory: ./apps/frontend
      run: npm run lint

    - name: 🏗️ Build application
      working-directory: ./apps/frontend
      run: npm run build

    - name: 📊 Build size analysis
      run: |
        echo "📊 Build size analysis:"
        du -sh apps/frontend/.next/ || echo "Build directory not found"

  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 📦 Install dependencies
      working-directory: ./apps/backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🧪 Run Python linting
      working-directory: ./apps/backend
      run: |
        # Install flake8 if not in requirements
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: 🧪 Run backend tests
      working-directory: ./apps/backend
      run: |
        # Add your actual test command here
        echo "Backend tests would run here"
        # python -m pytest tests/ || echo "No tests found"

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: 🔧 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: 🔒 Frontend security audit
      run: |
        npm audit --audit-level=high || echo "Security vulnerabilities found"

    - name: 🔒 Backend security audit
      working-directory: ./apps/backend
      run: |
        pip install safety
        safety check || echo "Security vulnerabilities found"

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 📊 Code quality checks
      run: |
        echo "📊 Running code quality checks..."
        
        # Check for TODO/FIXME comments
        echo "🔍 Checking for TODO/FIXME comments:"
        grep -r "TODO\|FIXME" . || echo "No TODO/FIXME found"
        
        # Check for console.log statements
        echo "🔍 Checking for console.log statements:"
        grep -r "console\.log" . || echo "No console.log found"
        
        # Check file sizes
        echo "📊 Large files (>1MB):"
        find . -type f -size +1M -exec ls -lh {} \; || echo "No large files found"


