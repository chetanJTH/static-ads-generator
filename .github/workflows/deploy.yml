name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          # Navigate to project directory
          cd /opt/hosting/static-ads-generator
          
          # Stop PM2 services
          pm2 stop ecosystem.config.cjs || true
          
          # Handle local changes and pull latest
          git stash || true
          git pull origin main
          
          # Fix permissions
          chown -R root:root .
          chmod -R 755 .
          chmod +x scripts/*.sh
          
          # Preserve existing environment files before setup
          if [ -f "apps/backend/.env" ]; then
            cp apps/backend/.env apps/backend/.env.backup
          fi
          if [ -f "apps/frontend/.env" ]; then
            cp apps/frontend/.env apps/frontend/.env.backup
          fi
          
          # Setup standardized environment files (prevents env variable issues)
          ./scripts/setup-env-files.sh
          
          # Restore environment files if they were overwritten
          if [ -f "apps/backend/.env.backup" ]; then
            cp apps/backend/.env.backup apps/backend/.env
            rm apps/backend/.env.backup
          fi
          if [ -f "apps/frontend/.env.backup" ]; then
            cp apps/frontend/.env.backup apps/frontend/.env
            rm apps/frontend/.env.backup
          fi
          
          # Install backend dependencies
          cd apps/backend
          pip3 install -r requirements.txt
          cd ..
          
          # Install frontend dependencies
          cd apps/frontend
          npm ci
          
          # Clean and build frontend
          rm -rf .next
          mkdir -p .next
          chmod 755 .next
          npm run build
          cd ..
          
          # Restart PM2 services
          pm2 start ecosystem.config.cjs
          pm2 save
          
          # Show status
          pm2 list
          
          # Verify deployment
          echo "üîç Verifying deployment..."
          if [ -f "apps/frontend/components/AdminBlogEditor.tsx" ]; then
            echo "‚úÖ AdminBlogEditor.tsx found"
            if grep -q "Quill" apps/frontend/components/AdminBlogEditor.tsx; then
              echo "‚úÖ Quill editor found in AdminBlogEditor"
            else
              echo "‚ùå Quill editor NOT found in AdminBlogEditor"
            fi
          else
            echo "‚ùå AdminBlogEditor.tsx NOT found"
          fi
          
          # Check if services are running
          if pm2 list | grep -q "online"; then
            echo "‚úÖ Services are running"
          else
            echo "‚ùå Some services failed to start"
            pm2 logs --lines 10
          fi