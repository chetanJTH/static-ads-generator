name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PYTHON_VERSION: '3.9'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: apps/frontend/package-lock.json
    
    - name: Install Frontend Dependencies
      run: |
        cd apps/frontend
        npm ci

    - name: Run Frontend Linting
      run: |
        cd apps/frontend
        npm run lint

    - name: Build Frontend (Test)
      run: |
        cd apps/frontend
        npm run build
      env:
        NODE_ENV: production

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        timeout: 300s
        script: |
          set -e
          
          # Navigate to project directory
          cd /opt/hosting/static-ads-generator
          
          # Create backup of current commit
          echo "Creating backup..."
          BACKUP_COMMIT=$(git rev-parse HEAD)
          echo "Backup commit: $BACKUP_COMMIT"
          
          # Pull latest changes
          echo "Pulling latest changes..."
          git pull origin main
          
          # Fix permissions
          echo "Fixing permissions..."
          chown -R root:root .
          chmod -R 755 .
          chmod +x scripts/*.sh
          
          # Stop PM2 services gracefully
          echo "Stopping PM2 services..."
          pm2 stop ecosystem.config.js || echo "Services were not running"
          
          # Install backend dependencies
          echo "Installing backend dependencies..."
          cd apps/backend
          pip3 install -r requirements.txt
          cd ..
          
          # Install frontend dependencies
          echo "Installing frontend dependencies..."
          cd apps/frontend
          npm ci
          
          # Clean and build frontend
          echo "Building frontend..."
          rm -rf .next
          rm -rf node_modules/.cache || true
          mkdir -p .next
          chmod 755 .next
          
          if ! npm run build; then
            echo "Build failed! Rolling back..."
            cd ../..
            git checkout $BACKUP_COMMIT
            pm2 start ecosystem.config.js || true
            exit 1
          fi
          
          cd ..
          
          # Start PM2 services
          echo "Starting PM2 services..."
            pm2 start ecosystem.config.js
          pm2 save
          
          # Wait for services to start
          echo "Waiting for services to start..."
          sleep 15
          
          # Run health checks
          echo "Running health checks..."
          if ./scripts/health-check.sh; then
            echo "‚úÖ Deployment successful!"
            echo "Current commit: $(git log --oneline -1)"
            pm2 list
          else
            echo "‚ùå Health checks failed! Rolling back..."
            git checkout $BACKUP_COMMIT
            cd apps/frontend
            npm run build || echo "Rollback build failed"
            cd ../..
            pm2 restart ecosystem.config.js || true
            exit 1
          fi
    
    - name: Notify Success
      if: success()
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "Site: https://kraftey.com"
        echo "API: https://staticapi.kraftey.com"
    
    - name: Notify Failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "Check the logs above for details."